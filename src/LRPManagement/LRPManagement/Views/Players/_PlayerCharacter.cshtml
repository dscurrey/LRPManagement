@model IEnumerable<LRPManagement.Models.Character>

<p>
    <a asp-action="Create" asp-controller="Characters">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsRetired)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CharacterRef)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Player)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsActive)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsRetired)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CharacterRef)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Player.Id)
            </td>
            <td>
                <a asp-action="Edit" asp-controller="Characters" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-controller="Characters" asp-route-id="@item.Id">Details</a> |
                @if (!item.IsActive && !item.IsRetired)
                {
                    <a asp-action="SetActive" asp-controller="Characters" asp-route-id="@item.Id">Set As Active</a>
                }
                @if (!item.IsRetired)
                {
                    <a asp-action="SetRetire" asp-controller="Characters" asp-route-id="@item.Id">Retire</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
