<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LRP.Items</name>
    </assembly>
    <members>
        <member name="M:LRP.Items.Controllers.CraftablesController.GetCraftables">
            <summary>
            Action to get all items/craftables
            </summary>
            <returns>List of all craftables</returns>
        </member>
        <member name="M:LRP.Items.Controllers.CraftablesController.GetCraftable(System.Int32)">
            <summary>
            Gets a single craftable with a unique ID
            </summary>
            <param name="id">Character ID</param>
            <returns>Character with chosen ID</returns>
        </member>
        <member name="M:LRP.Items.Controllers.CraftablesController.PutCraftable(System.Int32,LRP.Items.Models.Craftable)">
            <summary>
            Updates a craftable
            </summary>
            <param name="id">Id of the craftable</param>
            <param name="craftable">The craftable to be updated</param>
            <returns>NoContent if successful</returns>
        </member>
        <member name="M:LRP.Items.Controllers.CraftablesController.PostCraftable(LRP.Items.Models.Craftable)">
            <summary>
            Creates a new craftable in the database/repository
            </summary>
            <param name="craftable">The craftable to be inserted</param>
            <returns>The inserted craftable</returns>
        </member>
        <member name="M:LRP.Items.Controllers.CraftablesController.DeleteCraftable(System.Int32)">
            <summary>
            Deletes a craftable
            </summary>
            <param name="id">The unique ID of the chosen craftable</param>
            <returns>The deleted craftable</returns>
        </member>
        <member name="M:LRP.Items.Data.Bonds.IBondRepository.GetAll">
            <summary>
            Gets all bonds in database
            </summary>
            <returns>A list of bonds</returns>
        </member>
        <member name="M:LRP.Items.Data.Bonds.IBondRepository.Get(System.Int32)">
            <summary>
            Gets the bond associated with the ID
            </summary>
            <param name="id">Unique ID of the bond</param>
            <returns>Matching bond</returns>
        </member>
        <member name="M:LRP.Items.Data.Bonds.IBondRepository.GetForItem(System.Int32)">
            <summary>
            Gets a list of bonds which contain a specified item/craftable
            </summary>
            <param name="itemId">ID of the chosen item/craftable</param>
            <returns>A matching list of bonds</returns>
        </member>
        <member name="M:LRP.Items.Data.Bonds.IBondRepository.GetForCharacter(System.Int32)">
            <summary>
            Gets a list of bonds which belong to a specified character
            </summary>
            <param name="charId">The ID of the character</param>
            <returns>A list of bonds</returns>
        </member>
        <member name="M:LRP.Items.Data.Bonds.IBondRepository.Insert(LRP.Items.Models.Bond)">
            <summary>
            Inserts a bond into the database
            </summary>
            <param name="bond">New Bond to be inserted</param>
        </member>
        <member name="M:LRP.Items.Data.Bonds.IBondRepository.Delete(System.Int32)">
            <summary>
            Deletes a bond
            </summary>
            <param name="id">ID of the bond to be deleted</param>
            <returns>Task</returns>
        </member>
        <member name="M:LRP.Items.Data.Bonds.IBondRepository.Save">
            <summary>
            Saves changes made to DB context
            </summary>
            <returns>Task</returns>
        </member>
        <member name="M:LRP.Items.Data.Craftables.ICraftableRepository.GetAll">
            <summary>
            Gets all craftable (item) entities in database
            </summary>
            <returns>A list of craftables</returns>
        </member>
        <member name="M:LRP.Items.Data.Craftables.ICraftableRepository.GetCraftable(System.Int32)">
            <summary>
            Gets the craftable associated with a specific ID
            </summary>
            <param name="id">The unique ID of the craftable</param>
            <returns>The craftable with matching ID</returns>
        </member>
        <member name="M:LRP.Items.Data.Craftables.ICraftableRepository.InsertCraftable(LRP.Items.Models.Craftable)">
            <summary>
            Inserts a craftable into the database
            </summary>
            <param name="craftable">The craftable to be inserted</param>
        </member>
        <member name="M:LRP.Items.Data.Craftables.ICraftableRepository.DeleteCraftable(System.Int32)">
            <summary>
            Deletes a craftable
            </summary>
            <param name="id">The ID of the craftable to be deleted</param>
            <returns>Task</returns>
        </member>
        <member name="M:LRP.Items.Data.Craftables.ICraftableRepository.UpdateCraftable(LRP.Items.Models.Craftable)">
            <summary>
            Updates a craftable
            </summary>
            <param name="craftable">The craftable to be updated</param>
        </member>
        <member name="M:LRP.Items.Data.Craftables.ICraftableRepository.Save">
            <summary>
            Saves changes made to DB context
            </summary>
            <returns>Task</returns>
        </member>
    </members>
</doc>
